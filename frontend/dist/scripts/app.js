import data from"./data.js";const closer=document.querySelectorAll(".closer");closer.forEach((e=>{e.addEventListener("click",(t=>{e.parentNode.parentNode.classList.toggle("toggle")}))}));const menuBtn=document.querySelector("button.menu.menu-btn"),menu=document.querySelector(".menu-panel");menuBtn.addEventListener("click",(e=>{menu.classList.add("toggle")}));const cardContainers=document.querySelectorAll(".trello-card-list .container"),cards=document.querySelectorAll(".trello-card-list .container .card");let draggedCard=null;for(let e=0;e<cards.length;e++){const t=cards[e];t.addEventListener("dragstart",(()=>{draggedCard=t,setTimeout((()=>{t.classList.add("dragging")}),0)})),t.addEventListener("dragend",(()=>{setTimeout((()=>{draggedCard.classList.remove("dragging"),draggedCard=null}),0)}));for(let e=0;e<cardContainers.length;e++){const t=cardContainers[e];t.addEventListener("dragover",(e=>{e.preventDefault()})),t.addEventListener("dragenter",(e=>{e.preventDefault(),t.classList.add("potential-drag")})),t.addEventListener("dragexit",(e=>{e.preventDefault(),t.classList.remove("potential-drag")})),t.addEventListener("drop",(e=>{t.append(draggedCard),t.classList.remove("potential-drag")}))}}